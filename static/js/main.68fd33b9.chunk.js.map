{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","href","onClick","content","App","state","selectTab","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACEF,UAAWD,IAAOH,EAAYG,GAAK,YAAc,GACjD,UAAQ,MAFV,SAKE,mBACEI,KAAI,WAAMJ,GACV,UAAQ,UACRK,QACER,EAAYG,KAAOA,EACf,kBAAMJ,EAAcG,IACpB,kBAAM,MANd,SASGI,KAXEH,UAkBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYS,cCtCRZ,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,gBAG7BC,EAAb,4MACEC,MAAQ,CACNX,YAAaH,EAAK,IAFtB,EAKEe,UAAY,SAACV,GACX,EAAKW,SAAS,CACZb,YAAaE,KAPnB,4CAWE,WACE,MAAsBY,KAAKH,MAAMX,YAAzBG,EAAR,EAAQA,GAAIG,EAAZ,EAAYA,MAEZ,OACE,sBAAKF,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,KAGtB,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeK,EACfJ,cAAee,KAAKF,mBAvB9B,GAAyBG,IAAMC,WCX/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.68fd33b9.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '../../Types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={id === selectedTab.id ? 'is-active' : ''}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={\n                    selectedTab.id !== id\n                      ? () => onTabSelected(tab)\n                      : () => null\n                  }\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedTab: tabs[0],\n  };\n\n  selectTab = (tab: Tab) => {\n    this.setState({\n      selectedTab: tab,\n    });\n  };\n\n  render() {\n    const { id, title } = this.state.selectedTab;\n\n    return (\n      <div className=\"section\">\n        <h1 className=\"title\">\n          {`Selected tab is ${title}`}\n        </h1>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={id}\n          onTabSelected={this.selectTab}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}